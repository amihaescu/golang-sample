version: '3.9'

services:
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: sample
      MONGO_INITDB_ROOT_PASSWORD: sample
    networks:
      - sample-net
    ports:
      - "27017:27017"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.2.arm64
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - sample-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1

  kafka1:
    image: confluentinc/cp-kafka:7.2.2.arm64
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
    networks:
      - sample-net
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka1:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper


  # Elasticsearch Docker Images: https://www.docker.elastic.co/
  elasticsearch:
    image: arm64v8/elasticsearch:7.17.8
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    networks:
      - sample-net
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    container_name: kibana
    image: arm64v8/kibana:7.17.8
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - sample-net
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
networks:
  sample-net:
    driver: bridge